<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.application.available-resources.db"><info><title>Zend_Application_Resource_Db</title></info>
    

    <para>
        <classname>Zend_Application_Resource_Db</classname> initialisiert einen
        <classname>Zend_Db</classname> Adapter basieren auf den Ihm übergebenen Optionen.
        Standardmäßig, setzt es den Adapter als Default Adapter zur Verwendung mit
        <classname>Zend_Db_Table</classname>. Wenn man mehrere Datenbanken simultan verwenden
        will, kann man das <link linkend="zend.application.available-resources.multidb">Multidb Ressource Plugin</link>
        verwenden.
    </para>

    <para>
        Die folgenden Konfigurationsschlüssel werden erkannt:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <emphasis><property>adapter</property></emphasis>: <classname>Zend_Db</classname>
                Adaptertyp.
            </para>
        </listitem>

        <listitem>
            <para>
                <emphasis><property>params</property></emphasis>: Assoziatives Array von
                Konfigurationsparametern das verwendet wird wenn man die Instanz des Adapter
                empfängt.
            </para>
        </listitem>

        <listitem>
            <para>
                <emphasis><property>isDefaultTableAdapter</property></emphasis>: Ob dieser Adapter
                als Standard-Tabellen Adapter verwendet werden soll oder nicht.
            </para>
        </listitem>

        <listitem>
            <para>
                <emphasis><property>defaultMetadataCache</property></emphasis>: Der Name des
                Cache Templates oder einer Instanz von <classname>Zend_Cache_Core</classname> welche
                als Metadaten-Cache für <classname>Zend_Db_Table</classname> zu verwenden ist.
            </para>
        </listitem>
    </itemizedlist>

    <example xml:id="zend.application.available-resources.db.configExample"><info><title>Beispiel der Konfiguration einer DB Adapter Ressource</title></info>
        

        <para>
            Anbei ist das Beispiel einer <acronym>INI</acronym> Konfiguration die verwendet werden
            kann um die DB Ressource zu initialisieren.
        </para>

        <programlisting language="ini"><![CDATA[
[production]
resources.db.adapter = "pdo_mysql"
resources.db.params.host = "localhost"
resources.db.params.username = "webuser"
resources.db.params.password = "XXXXXXX"
resources.db.params.dbname = "test"
resources.db.isDefaultTableAdapter = true

; Optional kann auch ein Cache Template zur Verwendung für Metadaten Caching
; angegeben werden:
resources.db.defaultMetadataCache = "database"
]]></programlisting>
    </example>

    <note><info><title>Empfangen der Adapter Instanz</title></info>
        

        <para>
            Wenn man den, mit dieser Ressource initialisierten Adapter, nicht zum
            Standard-Tabellen Adapter macht, wie erhält man dann die Adapter Instanz ?
        </para>

        <para>
            Wie bei jedem Ressource Plugin, kann an das DB Ressource Plugin von der Bootstrap Datei
            erhalten:
        </para>

        <programlisting language="php"><![CDATA[
$resource = $bootstrap->getPluginResource('db');
]]></programlisting>

        <para>
            Sobald man das Ressource Objekt hat, kann man den DB Adapter erhalten indem die
            <methodname>getDbAdapter()</methodname> Methode verwendet wird:
        </para>

        <programlisting language="php"><![CDATA[
$db = $resource->getDbAdapter();
]]></programlisting>
    </note>
</section>
