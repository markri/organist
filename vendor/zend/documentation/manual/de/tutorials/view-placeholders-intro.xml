<?xml version="1.0" encoding="utf-8"?>


<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="learning.view.placeholders.intro"><info><title>Einführung</title></info>
    

    <para>
        Im <link linkend="learning.layout">vorherigen Kapitel</link> haben wir primär das Two Step
        Pattern betrachtet, welches es erlaubt individuelle Anwendungsviews in einem Siteweitem
        Layout einzubetten. Am Ende dieses Kapitels diskutieren wir trotzdem noch einige
        Limitationen:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                Wie verändert man den Titel der Seite?
            </para>
        </listitem>

        <listitem>
            <para>
                Wie könnte man konditionale Skripte oder Stylesheets in ein Siteweites Layout
                injizieren?
            </para>
        </listitem>

        <listitem>
            <para>
                Wie würde man eine optionale Sidebar erstellen und darstellen? Was wenn ein Teil des
                Inhalts nicht konditional, und anderer Inhalt für die Sidebar konditional war?
            </para>
        </listitem>
    </itemizedlist>

    <para>
        Diese Fragen werden im <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://java.sun.com/blueprints/corej2eepatterns/Patterns/CompositeView.html">Composite
        View</link> Design Pattern behandelt. Ein Weg zu diesem Pattern ist es "hints" oder Inhalt
        für das Siteweite Layout anzubieten. Im Zend Framwork wird das durch spezialisierte View
        Helfer ermöglicht welche "placeholders" (Platzhalter) heißen. Platzhalter erlauben es einem
        Inhalte zu erstellen, und diese erstellten Inghalte anschließend an anderer Stelle darzustellen.
    </para>
</section>
