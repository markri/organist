<?xml version="1.0" encoding="utf-8"?>
<appendix xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="doc-standard"><info><title>Zend Framework Dokumentations Standard</title></info>
    

    <section xml:id="doc-standard.overview"><info><title>Übersicht</title></info>
        

        <section xml:id="doc-standard.overview.scope"><info><title>Ziele</title></info>
            

            <para>
                Dieses Dokument bietet Richtlinien für die Erstellung der End-Benutzer
                Dokumentation die im Zend Framework gefunden werden kann. Es ist als Richtlinie
                für die Mitglieder des Zend Framework gedacht, welche Dokumentationen als Teil
                Ihrer übermittelten Komponenten Dokumentation schreiben müssen, sowie für die
                Übersetzer von Dokumentation. Der hier enthaltene Standard ist gedacht für einfache
                Übersetzung von Dokumentationen, minimalisieren von Visualisierung und
                stylistischen Unterschieden zwischen den unterschiedlichen Dokumentationsdateien,
                und macht das Finden von Änderungen in der Dokumentation einfacher mit
                <command>diff</command> Tools.
            </para>

            <para>
                Man kann diese Standards zusammen mit den Regeln unserer
                <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://framework.zend.com/license">Lizenz</link> adoptieren und oder
                modifizieren.
            </para>

            <para>
                Themen die im Zend Framework Dokumentations Standard beschrieben sind enthalten die
                Formatierung von Dokumentationsdateien sowie Empfehlungen für die Qualität der
                Dokumentation.
            </para>
        </section>
    </section>

    <section xml:id="doc-standard.file-formatting"><info><title>Formatierung von Dokumentationsdateien</title></info>
        

        <section xml:id="doc-standard.file-formatting.xml-tags"><info><title>XML Tags</title></info>
            

            <para>
                Jede Datei des Manuals muß die folgenden <acronym>XML</acronym> Deklarationen am
                Beginn der Datei enthalten:
            </para>

            <programlisting language="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
]]></programlisting>

            <para>
                <acronym>XML</acronym> Dateien von übersetzten Sprachen müssen auch ein Revisions
                Tag enthalten das mit der Revision der englischen Sprachdatei korrespondiert auf
                der die Übersetzung basiert.
            </para>

            <programlisting language="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 14978 -->
<!-- Reviewed: no -->
]]></programlisting>
        </section>

        <section xml:id="doc-standard.file-formatting.max-line-length"><info><title>Maximale Zeilenlänge</title></info>
            

            <para>
                Die maximale Zeilenlänge, inklusive Tags, Attribute und Einrückungen, darf 100
                Zeichen nicht überschreiten. Es gibt nur eine einzige Ausnahme zu dieser Regel:
                Attributen und Werte Paaren ist es erlaubt die 100 Zeichen zu überschreiten wenn
                diese nicht getrennt werden dürfen.
            </para>
        </section>

        <section xml:id="doc-standard.file-formatting.indentation"><info><title>Einrückung</title></info>
            

            <para>
                Eine Einrückung sollte aus 4 Leerzeichen bestehen. Tabulatoren sind nicht erlaubt.
            </para>

            <para>
                Tags welche auf dem gleichen Level sind müssen auch die gleiche Einrückung haben.
            </para>

            <programlisting language="xml"><![CDATA[
<sect1>
</sect1>

<sect1>
</sect1>
]]></programlisting>

            <para>
                Tags welche ein Level unter dem vorhergehenden Tag sind müssen mit 4 zusätzlichen
                Leerzeichen eingerückt werden.
            </para>

            <programlisting language="xml"><![CDATA[
<sect1>
    <sect2>
    </sect2>
</sect1>
]]></programlisting>

            <para>
                Mehrere Block Tags in der gleichen Zeile sind nicht erlaubt; mehrere Inline Tags
                sind trotzdem erlaubt.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<sect1><sect2>
</sect2></sect1>

<!-- ERLAUBT -->
<para>
    <classname>Zend_Magic</classname> existiert nicht. <classname>Zend_Acl</classname> existiert.
</para>
]]></programlisting>
        </section>

        <section xml:id="doc-standard.file-formatting.line-termination"><info><title>Zeilen Begrenzung</title></info>
            

            <para>
                Die Zeilen Begrenzung folgt der Unix Textdatei Konvention. Zeilen müssen mit einem
                einzelnen Linefeed (LF) Zeichen enden. Linefeed Zeichen werden als ordinale 10,
                oder Hexadezimale 0x0A repräsentiert.
            </para>

            <para>
                Beachte: Es sind keine Carriage Returns (<acronym>CR</acronym>) zu verwenden welche
                die Konvention in Apple OS's (0x0D) sind, oder die Carriage Return - Linefeed
                Kombination (<acronym>CRLF</acronym>) welche der Standard für Windows OS (0x0D,
                0x0A) sind.
            </para>
        </section>

        <section xml:id="doc-standard.file-formatting.empty-tags"><info><title>Leere Tags</title></info>
            

            <para>
                Leere Tags sind nicht erlaubt; alle Tags müssen Text oder Untertags enthalten.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<para>
    Irgendein Text. <link></link>
</para>

<para>
</para>
]]></programlisting>
        </section>

        <section xml:id="doc-standard.file-formatting.whitespace"><info><title>Verwendung von Leerzeichen in Dokumenten</title></info>
            

            <section xml:id="doc-standard.file-formatting.whitespace.trailing"><info><title>Leerzeichen in Tags</title></info>
                

                <para>
                    Öffnende Block Tags sollten direkt nach Ihnen keine Leerzeichen haben sondern
                    nur einen Zeilenumbruch (und Einrückungen in der folgenden Zeile).
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<sect1>LEERZEICHEN
</sect1>
]]></programlisting>

                <para>
                    Öffnende Inline Tags sollten keine Leerzeichen haben die Ihnen direkt folgen.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
Das ist die Klasse <classname> Zend_Class</classname>.

<!-- OK -->
Das ist die Klasse <classname>Zend_Class</classname>.
]]></programlisting>

                <para>
                    Schließenden Block Tags können Leerzeichen vorangestellt sein die dem aktuellen
                    Einrückungslevel entsprechen, aber nicht mehr als diese Anzahl.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
    <sect1>
     </sect1>

<!-- OK -->
    <sect1>
    </sect1>
]]></programlisting>

                <para>
                    Schließenden Inline Tags dürfen keine Leerzeichen vorangestellt sein.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
Das ist die Klasse <classname>Zend_Class </classname>

<!-- OK -->
Das ist die Klasse <classname>Zend_Class</classname>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.whitespace.multiple-line-breaks"><info><title>Mehrere Zeilenumbrüche</title></info>
                

                <para>
                    Mehrere Zeilenumbrüche innerhalb oder auch zwischen Tags sind nicht erlaubt.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<para>
    Etwas Text...

    ... und mehr Text.
</para>


<para>
    Anderer Paragraph.
</para>

<!-- OK -->
<para>
    Etwas Text...
    ... und mehr Text
</para>

<para>
    Anderer Paragraph.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.whitespace.tag-separation"><info><title>Trennung zwischen Tags</title></info>
                

                <para>
                    Tags auf dem gleichen Level müssen durch eine leere Zeile getrennt sein um die
                    Lesbarkeit zu erhöhen.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<para>
    Etwas Text...
</para>
<para>
    Mehr Text...
</para>

<!-- OK -->
<para>
    Etwas Text...
</para>

<para>
    Mehr Text...
</para>
]]></programlisting>

                <para>
                    Das erste Untertag sollte direkt unterhalb seiner Eltern geöffnet werden, ohne
                    das eine leere Zeile zwischen Ihnen ist; das letzte Untertag solte direkt vor
                    dem Schließenden Tag seiner Eltern geschlossen werden.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<sect1>

    <sect2>
    </sect2>

    <sect2>
    </sect2>

    <sect2>
    </sect2>

</sect1>

<!-- OK -->
<sect1>
    <sect2>
    </sect2>

    <sect2>
    </sect2>

    <sect2>
    </sect2>
</sect1>
]]></programlisting>
            </section>
        </section>

        <section xml:id="doc-standard.file-formatting.program-listing"><info><title>Programm Auflistungen</title></info>
            

            <para>
                Das öffnende <emphasis>&lt;programlisting&gt;</emphasis> Tag muss das richtige
                "language" Attribut anzeigen und auf dem gleichen Level eingerückt sein wie die
                vorhergehenden Blöcke.
            </para>

            <programlisting language="xml"><![CDATA[
<para>Vorhergehender Paragraph.</para>

<programlisting language="php"><![CDATA[
]]></programlisting>

            <para>
                <acronym>CDATA</acronym> sollte um alle Programm Auflistungen vorhanden sein.
            </para>

            <para>
                <emphasis>&lt;programlisting&gt;</emphasis> Sektionen dürfen keine Zeilenumbrüche
                oder Leerzeichen am Anfang oder Ende der Sektion besitzen, da diese auch in der
                endgültigen Ausgabe dargestellt werden.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<programlisting language="php"><![CDATA[

$render = "xxx";

]]]]><![CDATA[></programlisting>

<!-- OK -->
<programlisting language="php"><![CDATA[
$render = "xxx";
]]]]><![CDATA[></programlisting>
]]></programlisting>

            <para>
                Endende <acronym>CDATA</acronym> und <emphasis>&lt;programlisting&gt;</emphasis>
                Tags sollten in der gleichen Zeile, aber ohne Einrückung stehen.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
    <programlisting language="php"><![CDATA[
$render = "xxx";
]]]]><![CDATA[>
    </programlisting>

<!-- NICHT ERLAUBT -->
    <programlisting language="php"><![CDATA[
$render = "xxx";
    ]]]]><![CDATA[></programlisting>

<!-- OK -->
    <programlisting language="php"><![CDATA[
$render = "xxx";
]]]]><![CDATA[></programlisting>
]]></programlisting>

            <para>
                Das <emphasis>&lt;programlisting&gt;</emphasis> Tag sollte das "language" Atribut
                mit einem Wert enthalten der dem Inhalt der Programm Auflistung entspricht.
                Typischerweise enthält es die Werte "css", "html", "ini", "javascript", "php",
                "text", und "xml".
            </para>

            <programlisting language="xml"><![CDATA[
<!-- PHP -->
<programlisting language="php"><![CDATA[

<!-- Javascript -->
<programlisting language="javascript"><![CDATA[

<!-- XML -->
<programlisting language="xml"><![CDATA[
]]></programlisting>

            <para>
                Für Programm Auflistungen die nur <acronym>PHP</acronym> Code enthalten werden
                keine <acronym>PHP</acronym> Tags (wie z.B. "&lt;?php", "?&gt;") benötigt, und
                sollten auch nicht verwendet werden. Sie zeigen nur das Naheliegendste und werden
                durch die Verwendung des <emphasis>&lt;programlisting&gt;</emphasis> Tags
                impliziert.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<programlisting language="php"<![CDATA[<?php
    // ...
?>]]]]><![CDATA[></programlisting>

<programlisting language="php"<![CDATA[
<?php
    // ...
?>
]]]]><![CDATA[></programlisting>
]]></programlisting>

            <para>
                Die Zeilenlängen in Programm Auflistungen sollten den <link linkend="coding-standard.php-file-formatting.max-line-length">Coding Standard
                    Empfehlungen</link> folgen.
            </para>

            <para>
                <methodname>require_once()</methodname>, <methodname>require()</methodname>,
                <methodname>include_once()</methodname> und <methodname>include()</methodname>
                sollten innerhalb von <acronym>PHP</acronym> Auflistungen nicht verwendet werden.
                Sie zeigen nur das naheliegendste, und sind meistens nicht notwendig wenn ein
                Autoloader verwendet wird. Sie sollten nur verwendet werden wenn Sie essentiell
                für das Beispiel sind.
            </para>

            <note><info><title>Niemals Short Tags verwenden</title></info>
                

                <para>
                    Short Tags (z.B., "&lt;?", "&lt;?=") sollten niemals innerhalb von
                    <emphasis>programlisting</emphasis> oder einer Dokuments verwendet werden.
                </para>
            </note>
        </section>

        <section xml:id="doc-standard.file-formatting.inline-tags"><info><title>Notizen zu speziellen Inline Tags</title></info>
            

            <section xml:id="doc-standard.file-formatting.inline-tags.classname"><info><title>classname</title></info>
                

                <para>
                    Das Tag <emphasis>&lt;classname&gt;</emphasis> muß jedesmal verwendet werden
                    wenn ein Klassenname durch sich selbst repräsentiert wird; er sollte nicht
                    in Kombination mit einem Methodennamen, Variablennamen, oder einer Konstante
                    verwendet werden, und auch anderer Inhalt ist nicht innerhalb des Tags erlaubt.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Die Klasse <classname>Zend_Class</classname>.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.varname"><info><title>varname</title></info>
                

                <para>
                    Variablen müssen im <emphasis>&lt;varname&gt;</emphasis> Tag eingehüllt sein.
                    Variablen müssen mit Verwendung des "$" Siegels geschrieben werden. Kein
                    anderer Inhalt ist innerhalb des Tags erlaubt, ausser es wird ein Klassenname
                    verwendet, der eine Klassenvariable anzeigt.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Die Variable <varname>$var</varname> und die Klassenvariable
    <varname>Zend_Class::$var</varname>.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.methodname"><info><title>methodname</title></info>
                

                <para>
                    Methoden müssen innerhalb des <emphasis>&lt;methodname&gt;</emphasis> Tags
                    stehen. Methoden müssen entweder die komplette Methoden Signatur enthalten,
                    oder zumindest ein Paar schließender Klammern (z.B., "()"). Kein anderer
                    Inhalt ist innerhalb dieses Tags erlaubt, ausser es wird ein Klassenname
                    verwendet der eine Klassenmethode anzeigt.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Die Methode <methodname>foo()</methodname> und die Klassenmethode
    <methodname>Zend_Class::foo()</methodname>. Eine Methode mit der kompletten
    Signatur <methodname>foo($bar, $baz)</methodname>
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.constant"><info><title>constant</title></info>
                

                <para>
                    Das <emphasis>&lt;constant&gt;</emphasis> Tag ist zu verwenden wenn Konstanten
                    angezeigt werden sollen. Konstanten müssen <acronym>GROßGESCHRIEBEN</acronym>
                    werden. Kein anderer Inhalt ist innerhalb dieses Tags erlaubt, ausser es wird
                    ein Klassenname verwendet, der eine Klassenkonstante anzeigt.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Die Konstante <constant>FOO</constant> und die Klassenkonstante
    <constant>Zend_Class::FOO</constant>.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.filename"><info><title>filename</title></info>
                

                <para>
                    Dateinamen und Pfade müssen im <emphasis>&lt;filename&gt;</emphasis> Tag
                    enthalten sein. Kein anderer Inhalt ist innerhalb dieses Tags erlaubt.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Die Datei <filename>application/Bootstrap.php</filename>.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.command"><info><title>command</title></info>
                

                <para>
                    Commands, Shell Skripte, und Programmaufrufe müssen im
                    <emphasis>&lt;command&gt;</emphasis> Tag enthalten sein. Wenn das Kommando
                    Argumente enthält sollten diese auch im Tag enthalten sein.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Ausführen von <command>zf.sh create project</command>.
</para>
]]></programlisting>
            </section>

            <section xml:id="doc-standard.file-formatting.inline-tags.code"><info><title>code</title></info>
                

                <para>
                    Die Verwendung des <emphasis>&lt;code&gt;</emphasis> Tags ist nicht erlaubt.
                    Stattdessen sollten die anderen vorher besprochenen Inline Tags verwendet
                    werden.
                </para>
            </section>
        </section>

        <section xml:id="doc-standard.file-formatting.block-tags"><info><title>Notizen zu speziellen Block Tags</title></info>
            

            <section xml:id="doc-standard.file-formatting.block-tags.title"><info><title>title</title></info>
                

                <para>
                    Das <emphasis>&lt;title&gt;</emphasis> Tag darf keine anderen Tags enthalten.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NICHT ERLAUBT -->
<title>Verwendung von <classname>Zend_Class</classname></title>

<!-- OK -->
<title>Verwendung von Zend_Class</title>
]]></programlisting>
            </section>
        </section>
    </section>

    <section xml:id="doc-standard.recommendations"><info><title>Empfehlungen</title></info>
        

        <section xml:id="doc-standard.recommendations.editors"><info><title>Editoren ohne Autoformatierung verwenden</title></info>
            

            <para>
                Für die Bearbeitung der Dokumentation sollten typischerweise keine formale
                <acronym>XML</acronym> Editoren verwendet werden. Solche Editoren formatieren
                bestehende Dokumente normalerweise so das diese Ihren eigenen Standards folgen
                und folgen dem Docbook Standard nicht strikt. Als Beispiel haben wir gesehen
                das Sie die <acronym>CDATA</acronym> Tags entfernen, die Trennung von 4 Leerzeichen
                zu Tabs oder 2 Leerzeichen  ändern, usw.
            </para>

            <para>
                Die Styling Richtlinien wurde großteile geschrieben um Übersetzern zu helfen damit
                diese durch Verwendung von normalen <command>diff</command> Tools erkennen welche
                Zeilen sich geändert haben. Die Automatische formatierung macht diesen Prozess
                viel schwieriger.
            </para>
        </section>

        <section xml:id="doc-standard.recommendations.images"><info><title>Verwendung von Bildern</title></info>
            

            <para>
                Gute Bilder und Diagramme können die Lesbarkeit und Gemeinsamkeit erhöhen. Sie
                sollten immer dann verwendet werden wenn Sie diesen Zielen helfen. Bilder sollten
                im Verzeichnis <filename>documentation/manual/en/figures/</filename> platziert,
                und nach dem Kapitel benannt werden in dem Sie vorkommen.
            </para>
        </section>

        <section xml:id="doc-standard.recommendations.examples"><info><title>Gute Fallbeispiele</title></info>
            

            <para>
                Man sollte nach guten Fallbeispielen sehen die von der Community verbreitet werden.
                Speziell jene die in den Kommentaren der Proposals oder einer der Mailing Listen
                gesendet werden. Beispiel zeigen oft viel besser die Verwendung als es
                Beschreibungen tun.
            </para>

            <para>
                Wenn man Beispiele für die Inkludierung in das Handbuch schreibt, sollte man
                allen Coding Standards und Dokumentations Standards folgen.
            </para>
        </section>

        <section xml:id="doc-standard.recommendations.phpdoc"><info><title>Vermeide die Wiederholung von phpdoc Inhalten</title></info>
            

            <para>
                Das Handbuch ist dazu gedacht ein Referenzhandbuch für die Verwendung durch
                Endbenutzer zu sein. Die Wiederholung von phpdoc Dokumentation für intern
                verwendete Komponenten und Klassen ist nicht erwünscht, und die Beschreibungen
                sollten auf die Verwendung fokusiert sein, und nicht der internen Arbeitsweise.
                In jedem Fall und zu jeder Zeit wollen wir das sich die Dokumentations-Team auf
                die Übersetzung des englischen Handbuchs und nicht den phpdoc Kommentaren
                fokusiert.
            </para>
        </section>

        <section xml:id="doc-standard.recommendations.links"><info><title>Verwendung von Links</title></info>
            

            <para>
                Links sollten zu anderen Sektionen des Handbuchs oder externen Quellen verweisen
                statt Dokumentation zu wiederholen.
            </para>

            <para>
                Die Verlinkung zu anderen Sektionen des Handbuchs kann durchgeführt werden indem
                das <emphasis>&lt;link&gt;</emphasis> Tag verwendet wird (für welches man den Link
                Text selbst angeben muß).
            </para>

            <programlisting language="xml"><![CDATA[
<para>
    "Link" verweist zu einer Sektion, und verwendet beschreibenden Text: <link
        linkend="doc-standard.recommendations.links">Dokumentation zum
        Link</link>.
</para>
]]></programlisting>

            <para>
                Um auf eine externe Ressource zu verweisen muß <emphasis>&lt;ulink&gt;</emphasis>
                verwendet werden:
            </para>

            <programlisting language="xml"><![CDATA[
<para>
    Die <ulink url="http://framework.zend.com/">Zend Framework Seite</ulink>.
</para>
]]></programlisting>
        </section>
    </section>
</appendix>
