<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.float"><info><title>Float</title></info>
    

    <para>
        <classname>Zend_Validate_Float</classname> erlaubt es zu prüfen ob ein angegebener Wert eine
        Gleitkommazahl enthält. Diese Prüfung kann auch lokalisierte Eingaben prüfen.
    </para>

    <section xml:id="zend.validate.set.float.options"><info><title>Unterstützte Optionen für Zend_Validate_Float</title></info>
        

        <para>
            Die folgenden Optionen werden für <classname>Zend_Validate_Float</classname>
            unterstützt:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>locale</property></emphasis>: Setzt das Gebietsschema
                    welches verwendet wird um lokalisierte Gleitkommazahlen zu prüfen.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.validate.set.float.basic"><info><title>Einfache Float Prüfung</title></info>
        

        <para>
            Der einfachste Weg eine Gleitkommazahl zu prüfen ist die Verwendung der
            Systemeinstellungen. Wenn keine Option verwendet wird, dann wird das Gebietsschema der
            Umgebung für die Prüfung verwendet:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float();

$validator->isValid(1234.5);   // Gibt true zurück
$validator->isValid('10a01'); // Gibt false zurück
$validator->isValid('1,234.5'); // Gibt true zurück
]]></programlisting>

        <para>
            Im obigen Beispiel wird in der Umgebung das Gebietsschema "en" erwartet.
        </para>
    </section>

    <section xml:id="zend.validate.set.float.localized"><info><title>Lokalisierte Prüfung von Gleitkommazahlen</title></info>
        

        <para>
            Oft ist es nützlich in der Lage zu sein lokalisierte Werte zu prüfen. Gleitkommazahlen
            werden in anderen Ländern oft unterschiedlich geschrieben. Wird zum Beispiel englisch
            verwendet wird "1.5" geschrieben. Im deutschen wird man "1,5" schreiben und in anderen
            Sprachen können Gruppierungen verwendet werden.
        </para>

        <para>
            <classname>Zend_Validate_Float</classname> ist in der Lage solche Schreibweisen zu
            verwenden. Aber es ist auf das Gebietsschema begrenzt welches man verwendet. Siehe den
            folgenden Code:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float(array('locale' => 'de'));

$validator->isValid(1234.5); // Gibt true zurück
$validator->isValid("1 234,5"); // Gibt false zurück
$validator->isValid("1.234"); // Gibt true zurück
]]></programlisting>

        <para>
            Bei Verwendung eines Gebietsschemas wird die Eingabe, wie man sehen kann lokalisiert
            geprüft. Bei Verwendung einer anderen Schreibweise erhält man ein
            <constant>FALSE</constant> wenn das Gebietsschema eine andere Schreibweise erzwingt.
        </para>

        <para>
            Das Gebietsschema kann auch im Nachhinein gesetzt werden indem
            <methodname>setLocale()</methodname> verwendet wird, und empfangen indem man
            <methodname>getLocale()</methodname> verwendet.
        </para>
    </section>
</section>
