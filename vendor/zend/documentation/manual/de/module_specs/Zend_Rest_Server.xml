<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.rest.server"><info><title>Zend_Rest_Server</title></info>
    

    <section xml:id="zend.rest.server.introduction"><info><title>Einführung</title></info>
        

        <para>
            <classname>Zend_Rest_Server</classname> ist ein komplett-feature REST Server.
        </para>
    </section>

    <section xml:id="zend.rest.server.usage"><info><title>Verwenden des REST Servers</title></info>
        

        <example xml:id="zend.rest.server.usage.example-1"><info><title>Grundsätzliche Verwendung von Zend_Rest_Server: Klassen</title></info>
            

            <programlisting language="php"><![CDATA[
$server = new Zend_Rest_Server();
$server->setClass('My_Service_Class');
$server->handle();
]]></programlisting>
        </example>

        <example xml:id="zend.rest.server.usage.example-2"><info><title>Grundsätzliche Verwendung von Zend_Rest_Server: Funktionen</title></info>
            

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return string
 */
function sayHello($who, $when)
{
    return "Hallo $who, Gut $when";
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');
$server->handle();
]]></programlisting>
        </example>
    </section>

    <section xml:id="zend.rest.server.args"><info><title>Aufruf eines Zend_Rest_Server Services</title></info>
        

        <para>
            Um ein <classname>Zend_Rest_Server</classname> Service aufzurufen, muß ein
            <constant>GET</constant>/POST <code>method</code> Argument mit einem Wert angegeben
            werden, welcher der Methode entspricht, die aufgerufen werden soll. Es können
            anschließend beliebig viele Argumente folgen, die entweder den Namen des Arguments
            verwenden (z.B. "wer"), oder man kann <code>arg</code> verwenden, gefolgt von der
            nummerischen Position des Arguments (z.B. "arg1").
        </para>

        <note><info><title>Nummerischer Index</title></info>
            

            <para>
                Nummerische Argumente verwenden einen 1-basierenden Index.
            </para>
        </note>

        <para>
            Um <code>sayHello</code> vom obigen Beispiel aufzurufen, kann:
        </para>

        <para>
            <code>?method=sayHello&amp;who=Davey&amp;when=Day</code>
        </para>

        <para>
            verwendet werden, oder:
        </para>

        <para>
            <code>?method=sayHello&amp;arg1=Davey&amp;arg2=Day</code>
        </para>
    </section>

    <section xml:id="zend.rest.server.customstatus"><info><title>Senden eines eigenen Status</title></info>
        

        <para>
            Wenn Werte zurückgegeben werden, kann man, um einen eigenen Status zurückzugeben, ein
            Array mit einem <code>status</code> Schlüssel zurückgeben.
        </para>

        <example xml:id="zend.rest.server.customstatus.example-1"><info><title>Einen eigenen Status zurückgeben</title></info>
            

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return array
 */
function sayHello($who, $when)
{
    return array('msg' => 'Ein Fehler ist aufgetreten', 'status' => false);
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');
$server->handle();
]]></programlisting>
        </example>
    </section>

    <section xml:id="zend.rest.server.customxml"><info><title>Eigene XML Antworten zurückgeben</title></info>
        

        <para>
            Wenn man eigenes <acronym>XML</acronym> zurückgeben will, kann einfach ein
            <code>DOMDocument</code>, <code>DOMElement</code> oder <code>SimpleXMLElement</code>
            Objekt zurückgegeben werden.
        </para>

        <example xml:id="zend.rest.server.customxml.example-1"><info><title>Eigenes XML zurückgeben</title></info>
            

            <programlisting language="php"><![CDATA[
/**
 * Sag Hallo
 *
 * @param string $who
 * @param string $when
 * @return SimpleXMLElement
 */
function sayHello($who, $when)
{
    $xml ='<?xml version="1.0" encoding="ISO-8859-1"?>
<mysite>
    <value>Hallo $who! Hoffentlich hast Du einen guten $when</value>
    <code>200</code>
</mysite>';

    $xml = simplexml_load_string($xml);
    return $xml;
}

$server = new Zend_Rest_Server();
$server->addFunction('sayHello');

$server->handle();
]]></programlisting>
        </example>

        <para>
            Die Antwort des Services wird ohne Modifizierungen zum Client zurückgegeben.
        </para>
    </section>
</section>
