<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.filter.set.stringtrim"><info><title>StringTrim</title></info>
    

    <para>
        Dieser Filter verändert einen angegebenen String so dass bestimmte Zeichen vom Anfang und
        vom Ende entfernt werden.
    </para>

     <section xml:id="zend.filter.set.stringtrim.options"><info><title>Unterstützte Optionen für Zend_Filter_StringTrim</title></info>
        

        <para>
            Die folgenden Optionen werden für <classname>Zend_Filter_StringTrim</classname>
            unterstützt:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>charlist</property></emphasis>: Liste der Zeichen welche vom
                    Anfang und vom Ende des Strings entfernt werden sollen. Wenn sie nicht gesetzt
                    wird oder null ist, wird das Standardverhalten verwendet, welches nur
                    Leerzeichen vom Beginn und vom Ende des Strings entfernt.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.filter.set.stringtrim.basic"><info><title>Einfache Verwendung</title></info>
        

        <para>
            Ein einfaches Beispiel der Verwendung ist nachfolgend zu finden:
        </para>

        <programlisting language="php"><![CDATA[
$filter = new Zend_Filter_StringTrim();

print $filter->filter(' Das ist (mein) Inhalt: ');
]]></programlisting>

        <para>
            Das obige Beispiel gibe 'Das ist (mein) Inhalt:' zurück. Es sollte beachtet werden dass
            alle Leerzeichen entfernt wurden.
        </para>
    </section>

    <section xml:id="zend.filter.set.stringtrim.types"><info><title>Standardverhalten für Zend_Filter_StringTrim</title></info>
        

        <programlisting language="php"><![CDATA[
$filter = new Zend_Filter_StringTrim(':');
// oder new Zend_Filter_StringTrim(array('charlist' => ':'));

print $filter->filter(' Das ist (mein) Inhalt:');
]]></programlisting>

        <para>
            Das obige Beispiel gibt 'Das ist (mein) Inhalt' zurück. Es sollte beachtet werden dass
            Leerzeichen und Doppelpunkte entfernt werden. Man kann auch eine Instanz von
            <classname>Zend_Config</classname> oder ein Array mit einem 'charlist' Schlüssel
            angeben. Un die gewünschte Liste der Zeichen nach der Instanzierung zu setzen kann die
            Methode <methodname>setCharList()</methodname> verwendet werden.
            <methodname>getCharList()</methodname> gibt die Werte zurück welche für die Zeichenliste
            gesetzt sind.
        </para>
    </section>
</section>
