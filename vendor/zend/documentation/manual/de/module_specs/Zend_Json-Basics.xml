<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.json.basics"><info><title>Grundlegende Verwendung</title></info>
    

    <para>
        Die Verwendung von <classname>Zend_Json</classname> bedingt den Gebrauch der beiden
        öffentlich verfügbaren, statischen Methoden <methodname>Zend_Json::encode()</methodname> und
        <methodname>Zend_Json::decode()</methodname>.
    </para>

    <programlisting language="php"><![CDATA[
// Empfange einen Wert
$phpNative = Zend_Json::decode($encodedValue);

// Kodiere ihn für die Rückgabe an den Client:
$json = Zend_Json::encode($phpNative);
]]></programlisting>

    <section xml:id="zend.json.basics.prettyprint"><info><title>Schön-drucken von JSON</title></info>
        

        <para>
            Manchmal ist es schwer <acronym>JSON</acronym> Daten zu durchsuchen welche von
            <methodname>Zend_Json::encode()</methodname> erzeugt wurden da Sie keine Leerzeichen
            oder Einrückungen enthalten. Um das einfacher zu machen erlaubt es
            <classname>Zend_Json</classname> <acronym>JSON</acronym> schön ausgedruckt, in einem
            menschlich-lesbaren Format, zu erhalten, indem man
            <methodname>Zend_Json::prettyPrint()</methodname> verwendet.
        </para>

        <programlisting language="php"><![CDATA[
// Kodieren und an den Client zurückzugeben:
$json = Zend_Json::encode($phpNative);
if($debug) {
    echo Zend_Json::prettyPrint($json, array("indent" => " "));
}
]]></programlisting>

        <para>
            Das zweite optionale Argument von <methodname>Zend_Json::prettyPrint()</methodname> ist
            ein Optionen Array. Die Option <property>indent</property> erlaubt es einen String für
            die Einrückung zu definieren - standardmäßig ist das ein einzelnes Tabulator Zeichen.
        </para>
    </section>
</section>
