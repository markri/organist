<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.date.introduction"><info><title>Einführung</title></info>
    

    <para>
        Die <classname>Zend_Date</classname> Komponente bietet eine umfangreiche aber einfache
        <acronym>API</acronym> zur Manipulation von Datum und Zeit. Die Methoden verarbeiten eine
        große Auswahl von Datentypen in vielen Kombinationen und erweitern die vorhandenen
        <acronym>PHP</acronym> Datumsfunktionen um eine Vielzahl von Möglichkeiten. Die aktuellste
        Version der Dokumentation kann in unserer <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://framework.zend.com/wiki/display/ZFDOCDEV/Home">Online Dokumentation
            (regelmäßig mit SVN syncronisiert)</link> gefunden werden.
    </para>

    <para>
        Auch wenn Einfachheit das höchste Ziel bleibt, ist die Arbeit beim Umgang mit lokalisierten
        Datums- und Zeitangaben unweigerlich mit einer gewissen Komplexität verbunden. Daten als
        auch Zeitangaben werden in verschiedenen Datums- und Zeitzonen oft unterschiedlich
        dargestellt. Beispielsweise stellen manche die Monatsangabe voran, während andere das Jahr
        an erste Stelle schreiben um ein Kalenderdatum darzustellen. Für weiterführende
        Informationen über die Handhabung von Lokalisierung und Normalisierung kann im Abschnitt
        <link linkend="zend.locale.date.datesandtimes"><classname>Zend_Locale</classname></link>
        nachgelesen werden.
    </para>

    <para>
        <classname>Zend_Date</classname> unterstützt auch abgekürzte Monatsnamen in vielen Sprachen.
        <classname>Zend_Locale</classname> erleichert die Normalisierung von lokalisierten
        Monatsnamen und Wochentagen zu Zeitpunkten, die umgekehrt auch wieder lokalisiert für andere
        Regionen übersetzt werden können.
    </para>

    <section xml:id="zend.date.setdefaulttimezone"><info><title>Immer eine Standardzeitzone definieren</title></info>
        

        <para>
            Bevor beliebige datumsrelevante Funktionen in <acronym>PHP</acronym> oder dem Zend
            Framework verwendet werden können, sollten sichergestellt werden, dass die
            Standardzeitzone in der Anwendung korrekt definiert wurde. Das kann wahlweise mit dem
            Definieren einer TZ Umgebungsvariablen, der <property>date.timezone</property>
            Einstellung in der <filename>php.ini</filename> oder durch die Funktion <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/date_default_timezone_set">date_default_timezone_set()</link>
            durchgeführt werden. Durch das Setzen einer Standardzeitzone können in
            <acronym>PHP</acronym> können alle datums- und zeitabhängigen Funktionen für einen
            bestimmten Benutzer angepasst werden. Eine vollständige Auflistung der
            Zeitzoneneinstellungen kann in der <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://unicode.org/cldr/data/diff/supplemental/territory_containment_un_m_49.html">
                CLDR Zeitzonen Liste</link> ( Englisch ) gefunden werden.
        </para>

        <example xml:id="zend.date.setdefaulttimezone.example-1"><info><title>Definieren einer Standardzeitzone</title></info>
            

            <programlisting language="php"><![CDATA[
// Zeitzone für die USA, Kalifornien
date_default_timezone_set('America/Los_Angeles');
// Zeitzone für Deutschland
date_default_timezone_set('Europe/Berlin');
]]></programlisting>
        </example>

        <para>
            <emphasis>Wenn eine <classname>Zend_Date</classname> Instanz erzeugt wird, wird die
            Zeitzone des aktuellen Benutzers automatisch als aktuelle Standardzeitzone
            übernommen</emphasis>. Deshalb wird die Einstellung der Zeitzone für jede Zeitumstellung
            (<acronym>DST</acronym>) berücksichtigt und erspart effektiv das explizite Setzen der
            Sommer-/Winterzeitumstellung (<acronym>DST</acronym>).
        </para>

        <para>
            Es gilt zu beachten, dass die Zeitzonen <emphasis><acronym>UTC</acronym></emphasis> und
            <emphasis><acronym>GMT</acronym></emphasis> keine Sommer-/Winterzeitumstellung
            enthalten. Das bedeutet, dass selbst wenn per Hand definiert wurde, dass
            <classname>Zend_Date</classname> die <acronym>DST</acronym> berücksichtigen soll, das
            automatisch für alle Instanzen von <classname>Zend_Date</classname> zurückgeschaltet
            wird, die auf <acronym>UTC</acronym> oder <acronym>GMT</acronym> eingestellt wurden.
        </para>
    </section>

    <section xml:id="zend.date.why"><info><title>Warum soll Zend_Date verwendet werden ?</title></info>
        

        <para>
            <classname>Zend_Date</classname> erweitert die Möglichkeiten der <acronym>PHP</acronym>
            Datumsfunktionen um folgende Features:
        </para>

        <itemizedlist mark="opencircle">
            <listitem>
                <para>
                    Einfache <acronym>API</acronym>
                </para>

                <para>
                    <classname>Zend_Date</classname> bietet eine sehr einfache
                    <acronym>API</acronym>, welche die besten Datums- und Zeitfunktionen aus vier
                    Programmiersprachen vereint. Beispielsweise ist es möglich, in nur einer Zeile
                    zwei Zeiten miteinander zu vergleichen oder zu addieren.
                </para>
            </listitem>

            <listitem>
                <para>
                    Vollständig internationalisiert
                </para>

                <para>
                    Alle vollen und abgekürzten Monatsnamen und Wochentage aus mehr als 130 Sprachen
                    werden unterstützt. Die Methoden ermöglichen die Ein- und Ausgabe von Daten im
                    Format des jeweiligen Gebietsschemas.
                </para>
            </listitem>

            <listitem>
                <para>
                    Unlimitierte Zeitpunkte
                </para>

                <para>
                    Obwohl die <acronym>PHP</acronym> 5.2 Dokumentation erklärt: "Die gültige Spanne
                    eines Zeitpunktes geht von Fr, 13. Dez 1901 20:45:54 <acronym>GMT</acronym> bis
                    Di, 19. Jan 2038 03:14:07 <acronym>GMT</acronym>", ermöglicht
                    <classname>Zend_Date</classname> mit Unterstützung der BCMath Erweiterung eine
                    fast unbegrenzte Zeitspanne. Wenn BCMath nicht verfügbar ist, bietet
                    <classname>Zend_Date</classname> eine Spanne innerhalb des float
                    Datentyps des verwendeten Servers. "Die Größe von float ist Plattformabhängig,
                    allerdings ist das Maximum von <command>~1.8e308</command> mit einer Genauigkeit
                    von ca. 14 Dezimalstellen ein Standardwert. (das 64 bit <acronym>IEEE</acronym>
                    Format)." [<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.php.net/float">http://www.php.net/float</link>]. Zusätzlich
                    können inhärente Beschränkungen der Float-Datentypen sowie Rundungsfehler von
                    Fließkommazahlen Berechnungsfehler verursachen. Um diese Probleme zu vermeiden,
                    verwenden die I18n-Komponenten des Zend Frameworks die BCMath Extension, wenn
                    verfügbar.
                </para>
            </listitem>

            <listitem>
                <para>
                    Unterstützung der <acronym>ISO-8601</acronym> Datumsspezifikation
                </para>

                <para>
                    Die <acronym>ISO-8601</acronym> Datumsspezifikationen werden unterstützt. Sogar
                    teilkonforme <acronym>ISO-8601</acronym> Datumsspezifikationen werden erkannt.
                    Diese Zeitformate sind vor allem bei der Arbeit mit Datenbanken sinnvoll. Selbst
                    wenn zum Beispiel MsSQL und <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://dev.mysql.com/doc/refman/5.0/en/date-and-time-functions.html">MySQL</link>
                    leicht unterschiedlich mit Datum und Zeit umgehen, werden beide von
                    <classname>Zend_Date</classname> unterstützt, wenn die <link linkend="zend.date.constants.list">Zend_Date::ISO_8601</link> Format
                    Konstante verwendet wird. Wenn Datumszeichen mit den <acronym>PHP</acronym>
                    <methodname>date()</methodname> Formaten "<command>Y/m/d</command>" oder
                    "<command>Y-m-d H:i:s</command>" übereinstimmen, sollte die in
                    <classname>Zend_Date</classname> eingebaute Unterstützung für
                    <acronym>ISO-8601</acronym> formatierte Daten verwendet werden.
                </para>
            </listitem>

            <listitem>
                <para>
                    Sonnenauf- und Untergang errechnen
                </para>

                <para>
                    Sonnenauf-und Untergang können für jeden beliebigen Ort und Tag anzeigen werden,
                    so dass keine einzige Sekunde Tageslicht für das
                    Lieblings-<acronym>PHP</acronym>-Projekt verpasst werden muß :)
                </para>
            </listitem>
        </itemizedlist>
    </section>
</section>
