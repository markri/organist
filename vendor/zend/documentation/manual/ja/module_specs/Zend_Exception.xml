<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.exception.using"><info><title>例外の使用法</title></info>

    

    <para>
        <classname>Zend_Exception</classname> は、
        Zend Framework のクラスがスローするすべての例外の基底クラスとなります。
    </para>

    <example xml:id="zend.exception.using.example"><info><title>例外のキャッチ</title></info>
        
        <para>
            次のコードは、Zend Framework のクラスからスローされた例外をキャッチする方法を示すものです。
        </para>
        <programlisting language="php"><![CDATA[
try {
    // Zend_Loader::loadClass() で、存在しないクラスを指定してコールすると
    // Zend_Loader で例外がスローされます
    Zend_Loader::loadClass('nonexistantclass');
} catch (Zend_Exception $e) {
    echo "キャッチした例外: " . get_class($e) . "\n";
    echo "メッセージ: " . $e->getMessage() . "\n";
    // その他、エラーから復帰するためのコード
}
]]></programlisting>
    </example>
    <para>
        <classname>Zend_Exception</classname> を使用すると、
        Zend Framework のクラスがスローするすべての例外を catch
        ブロックで捕捉できるようになります。
        個々の例外をすべて個別に捕捉できないような場合に便利です。
    </para>

    <para>
        Zend Framework の各コンポーネントのドキュメントには、
        どのメソッドでどんな場合に例外をスローするのかや、
        どのような例外クラスがスローされるのかが記載されています。
    </para>

</section>
