<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.mail.character-sets"><info><title>文字セット</title></info>
    

    <para>
        <classname>Zend_Mail</classname> はメールの現在の文字セットをチェックしません。
        <classname>Zend_Mail</classname> のインスタンスを作成する際に、メールの文字セットを指定します。
        デフォルトは <code>iso-8859-1</code> です。
        メールに追加する内容は、すべて正しい文字セットでエンコードされている必要があります。
        新しいメールパートを作成する際には、
        個々のパートについて異なる文字セットを指定できます。
    </para>

    <note><info><title>テキスト形式限定</title></info>
        

        <para>
            文字セットが適用されるのは、プレーンテキストのメッセージについてのみです。
        </para>
    </note>

    <example xml:id="zend.mail.character-sets.cjk"><info><title>CJK 言語での利用</title></info>
        

        <para>
            下記の例は日本語での <classname>Zend_Mail</classname> の使い方です。
            これは <acronym>CJK</acronym> (別名 <acronym>CJKV</acronym> ) 言語のひとつです。
            もしあなたが中国語を使うなら、 <acronym>ISO-2022-JP</acronym> の代わりに
            <acronym>HZ-GB-2312</acronym> を使うでしょう。
        </para>

        <programlisting language="php"><![CDATA[
//PHP スクリプト上で文字列の文字エンコードが UTF-8 と仮定します。
function myConvert($string) {
    return mb_convert_encoding($string, 'ISO-2022-JP', 'UTF-8');
}

$mail = new Zend_Mail('ISO-2022-JP');
//この場合、 ISO-2022-JP は MSB を使わないので、
// ENCODING_7BIT を使えます。
$mail->setBodyText(
    myConvert('This is the text of the mail.'),
    null,
    Zend_Mime::ENCODING_7BIT
);
$mail->setHeaderEncoding(Zend_Mime::ENCODING_BASE64);
$mail->setFrom('somebody@example.com', myConvert('Some Sender'));
$mail->addTo('somebody_else@example.com', myConvert('Some Recipient'));
$mail->setSubject(myConvert('TestSubject'));
$mail->send();
]]></programlisting>

    </example>

</section>
