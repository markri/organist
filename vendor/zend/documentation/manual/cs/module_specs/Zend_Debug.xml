<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.debug.dumping"><info><title>Ladění proměnných</title></info>

    

    <para>
        Statická metoda <code>Zend_Debug::dump()</code> vypisuje nebo vrací informaci
        o určitém výrazu. Tento způsob ladění kódu se používá běžně, protože není
        třeba používat žádné speciální nástroje nebo prostředí pro ladění.
    </para>

    <example xml:id="zend.debug.dumping.example"><info><title>Příklad použití metody dump()</title></info>
        
        <programlisting role="php"><![CDATA[<?php

Zend_Debug::dump($var, $label=null, $echo=true)

?>]]></programlisting>
    </example>


    <para>
        Parametr <code>$var</code> přijímá výraz nebo proměnnou, jejíž
        obsah bude vypsán metodou <code>Zend_Debug::dump()</code>.
    </para>

    <para>
        Parametr <code>$label</code> obsahuje řetězec, který bude rovněž vypsán metodou
        <code>Zend_Debug::dump()</code>.  Může být velmi užitečný v případě, kdy
        jsou vypisovány informace o více proměnných najednou.
    </para>

    <para>
        Parametr <code>$echo</code> obsahuje boolean hodnotu (true/false)
        a určuje, zda má být výstup metody <code>Zend_Debug::dump()</code> vypsán.
        Jestliže je hodnota <code>true</code> (defaultně), obsah je vypsán.
        Bez ohledu na hodnotu parametru <code>$echo</code>, vždy je vrácen nějaký
        obsah.
    </para>

    <para>
        Může být užitečné vědět, že metoda
        <code>Zend_Debug::dump()</code> interně používá funkci
        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/var_dump"><code>var_dump()</code></link>.
        Metoda navíc zjišťuje, zda bude výstup vypsán ve webové prezentaci.
        Pokud ano, pak je výstup metody <code>var_dump()</code> escapován funkcí
        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/htmlspecialchars"><code>htmlspecialchars()</code></link>
        a obalen elementy (X)HTML <code>&lt;pre&gt;</code>.
    </para>

    <tip><info><title>Ladění pomocí Zend_Log</title></info>
        
        <para>
            Používání metody <code>Zend_Debug::dump()</code> je velmi dobré pro
            jednoduché ladění během vývoje. Jednoduše můžete přidat kód, který
            vypíše hodnotu proměnné a pak jej zase rychle odstranit.
        </para>
        <para>
            Je možné také používat knihovnu <link linkend="zend.log.overview">Zend_Log</link>
            pro dlouhodobé ladění kódu.
            Např. můžete používat <code>DEBUG</code> log level a výsledek metody
            <code>Zend_Debug::dump()</code> zapisovat do logu.
        </para>

    </tip>

</section>
