<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.float"><info><title>Float</title></info>
    

    <para>
        <classname>Zend_Validate_Float</classname> allows you to validate if a given value contains
        a floating-point value. This validator validates also localized input.
    </para>

    <section xml:id="zend.validate.set.float.options"><info><title>Supported options for Zend_Validate_Float</title></info>
        

        <para>
            The following options are supported for <classname>Zend_Validate_Float</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>locale</property></emphasis>: Sets the locale which will be
                    used to validate localized float values.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.validate.set.float.basic"><info><title>Simple float validation</title></info>
        

        <para>
            The simplest way to validate a float is by using the system settings. When no option
            is used, the environment locale is used for validation:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float();

$validator->isValid(1234.5);   // returns true
$validator->isValid('10a01'); // returns false
$validator->isValid('1,234.5'); // returns true
]]></programlisting>

        <para>
            In the above example we expected that our environment is set to "en" as locale.
        </para>
    </section>

    <section xml:id="zend.validate.set.float.localized"><info><title>Localized float validation</title></info>
        

        <para>
            Often it's useful to be able to validate also localized values. Float values are often
            written different in other countries. For example using english you will write "1.5".
            In german you may write "1,5" and in other languages you may use grouping.
        </para>

        <para>
            <classname>Zend_Validate_Float</classname> is able to validate such notations. But it is
            limited to the locale you set. See the following code:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Float(array('locale' => 'de'));

$validator->isValid(1234.5); // returns true
$validator->isValid("1 234,5"); // returns false
$validator->isValid("1.234"); // returns true
]]></programlisting>

        <para>
            As you can see, by using a locale, your input is validated localized. Using a different
            notation you get a <constant>FALSE</constant> when the locale forces a different
            notation.
        </para>

        <para>
            The locale can also be set afterwards by using <methodname>setLocale()</methodname> and
            retrieved by using <methodname>getLocale()</methodname>.
        </para>
    </section>
</section>
