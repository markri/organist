<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
<section xmlns="http://docbook.org/ns/docbook"
    xmlns:xl="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="zend.http.request">
    <info><title>Zend\Http\Request</title></info>

    <section xml:id="zend.http.request.intro">
        <info>
            <title>Overview</title>
        </info>

        <para>
            The <classname>Zend\Http\Request</classname> object is responsible for providing a
            fluent API that allows a developer to interact with all the various parts of an HTTP
            request.
        </para>

        <para>
            A typical HTTP request looks like this:
        </para>

        <literallayout>
--------------------------
| METHOD | URI | VERSION |
--------------------------
|        HEADERS         |
--------------------------
|         BODY           |
--------------------------
        </literallayout>

        <para>
            In simplified terms, the request consist of a method, <acronym>URI</acronym> and the
            HTTP version number which all make up the "Request Line."  Next is a set of headers;
            there can be 0 or an unlimited number of headers. After that is the request body, which
            is typically used when a client wishes to send data to the server in the form of an
            encoded file, or include a set of POST parameters, for example.  More information on the
            structure and specification of an HTTP request can be found in <link
                xl:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html">RFC-2616 on the
                W3.org site</link>.
        </para>

    </section>

    <section xml:id="zend.http.request.quick-start">
        <info>
            <title>Quick Start</title>
        </info>

        <para>
            Request objects can either be created from the provided
            <methodname>fromString()</methodname> factory, or, if you wish to have a completely
            empty object to start with, by simply instantiating the
            <classname>Zend\Http\Request</classname> class.
        </para>

        <programlisting language="php"><![CDATA[
use Zend\Http\Request;
$request = Request::fromString(<<<EOS
POST /foo HTTP/1.1
HeaderField1: header-field-value
HeaderField2: header-field-value2

foo=bar&
EOS);

// OR, the completely equivalent

$request = new Request();
$request->setMethod(Request::METHOD_POST);
$request->setUri('/foo');
$request->header()->addHeaders(array(
    'HeaderField1' => 'header-field-value',
    'HeaderField2' => 'header-field-value2',
);
$request->post()->set('foo', 'bar');

]]></programlisting>
    </section>

    <section xml:id="zend.http.request.options">
        <info>
            <title>Configuration Options</title>
        </info>

        <para>
            None currently
        </para>

        <!--
        <variablelist>
            <title/>
        </variablelist>
        -->
    </section>

    <section xml:id="zend.http.request.methods">
        <info>
            <title>Available Methods</title>
        </info>

        <variablelist>
            <varlistentry xml:id="zend.http.request.methods.from-string">
                <term>
                    <methodsynopsis>
                        <methodname>Request::fromString</methodname>
                        <methodparam>
                            <funcparams>string $string</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>A factory that produces a Request object from a well-formed Http Request string</para>
                    <para> </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-method">
                <term>
                    <methodsynopsis>
                        <methodname>setMethod</methodname>
                        <methodparam>
                            <funcparams>string $method</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Set the method for this request.</para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.get-method">
                <term>
                    <methodsynopsis>
                        <methodname>getMethod</methodname>
                        <methodparam>
                            <funcparams> </funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the method for this request.</para>
                    <para>Returns string.</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-uri">
                <term>
                    <methodsynopsis>
                        <methodname>setUri</methodname>
                        <methodparam>
                            <funcparams>string|Zend\Stdlib\RequestDescription\Zend\Stdlib\Message\Zend\Stdlib\ParametersDescription\Zend\Stdlib\Parameters\Zend\Uri\Http $uri</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Set the URI/URL for this request; this can be a string or an instance of
                        <classname>Zend\Uri\Http</classname>.
                    </para>
                    <para>Returns Zend\Http\Request</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.get-uri">
                <term>
                    <methodsynopsis>
                        <methodname>getUri</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the URI for this request object.</para>
                    <para>Returns string.</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.uri">
                <term>
                    <methodsynopsis>
                        <methodname>uri</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Return the URI for this request object as an instance of
                        <classname>Zend\Uri\Http</classname>.
                    </para>
                    <para>
                        Returns <classname>Zend\Uri\Http</classname>.
                    </para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-version">
                <term>
                    <methodsynopsis>
                        <methodname>setVersion</methodname>
                        <methodparam>
                            <funcparams>string $version</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Set the HTTP version for this object, one of 1.0 or 1.1
                        (<constant>Request::VERSION_10</constant>,
                        <constant>Request::VERSION_11</constant>).
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname>.</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.get-version">
                <term>
                    <methodsynopsis>
                        <methodname>getVersion</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the HTTP version for this request</para>
                    <para>Returns string</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-query">
                <term>
                    <methodsynopsis>
                        <methodname>setQuery</methodname>
                        <methodparam>
                            <funcparams>Zend\Stdlib\ParametersDescription $query</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for query parameters
                        in this object. (This is NOT the primary API for value setting; for that, see
                        <methodname linkend="zend.http.request.methods.query">query()</methodname>.)
                    </para>
                    <para> </para>
                    <para>Returns Zend\Http\Request</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.query">
                <term>
                    <methodsynopsis>
                        <methodname>query</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the parameter container responsible for query parameters.</para>
                    <para>Returns <classname>Zend\Stdlib\ParametersDescription</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-post">
                <term>
                    <methodsynopsis>
                        <methodname>setPost</methodname>
                        <methodparam>
                            <funcparams>Zend\Stdlib\ParametersDescription $post</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for post parameters
                        in this object. (This is NOT the primary API for value setting; for that,
                        see <methodname
                            linkend="zend.http.request.methods.post">post()</methodname>.)
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.post">
                <term>
                    <methodsynopsis>
                        <methodname>post</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the parameter container responsible for post parameters.</para>
                    <para>Returns <classname>Zend\Stdlib\ParametersDescription</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.cookie">
                <term>
                    <methodsynopsis>
                        <methodname>cookie</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Return the Cookie header, this is the same as calling
                        <code>$request-&gt;header()-&gt;get('Cookie');</code>.
                    </para>
                    <para> </para>
                    <para>Returns <classname>Zend\Http\Header\Cookie</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-file">
                <term>
                    <methodsynopsis>
                        <methodname>setFile</methodname>
                        <methodparam>
                            <funcparams>Zend\Stdlib\ParametersDescription $files</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for file parameters
                        in this object. (This is NOT the primary API for value setting; for that,
                        see <methodname
                            linkend="zend.http.request.methods.file">file()</methodname>.)
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.file">
                <term>
                    <methodsynopsis>
                        <methodname>file</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the parameter container responsible for file parameters</para>
                    <para>Returns <classname>Zend\Stdlib\ParametersDescription</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-server">
                <term>
                    <methodsynopsis>
                        <methodname>setServer</methodname>
                        <methodparam>
                            <funcparams>Zend\Stdlib\ParametersDescription $server</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for server
                        parameters in this object. (This is NOT the primary API for value setting;
                        for that, see <methodname
                            linkend="zend.http.request.methods.server">server()</methodname>.)
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.server">
                <term>
                    <methodsynopsis>
                        <methodname>server</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the parameter container responsible for server parameters</para>
                    <para>Returns <classname>Zend\Stdlib\ParametersDescription</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-env">
                <term>
                    <methodsynopsis>
                        <methodname>setEnv</methodname>
                        <methodparam>
                            <funcparams>Zend\Stdlib\ParametersDescription $env</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for env parameters
                        in this object. (This is NOT the primary API for value setting; for that,
                        see <methodname linkend="zend.http.request.methods.env">env()</methodname>.)
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.env">
                <term>
                    <methodsynopsis>
                        <methodname>env</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the parameter container responsible for env parameters</para>
                    <para>Returns <classname>Zend\Stdlib\ParametersDescription</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-header">
                <term>
                    <methodsynopsis>
                        <methodname>setHeader</methodname>
                        <methodparam>
                            <funcparams>Zend\Http\Headers $headers</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>
                        Provide an alternate Parameter Container implementation for headers in this object. (This is NOT the
                        primary API for value setting; for that, see <methodname
                            linkend="zend.http.request.methods.header">header()</methodname>.)
                    </para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.header">
                <term>
                    <methodsynopsis>
                        <methodname>header</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the header container responsible for headers</para>
                    <para>Returns <classname>Zend\Http\Headers</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.set-raw-body">
                <term>
                    <methodsynopsis>
                        <methodname>setRawBody</methodname>
                        <methodparam>
                            <funcparams>string $string</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Set the raw body for the request</para>
                    <para>Returns <classname>Zend\Http\Request</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.get-raw-body">
                <term>
                    <methodsynopsis>
                        <methodname>getRawBody</methodname>
                        <methodparam>
                            <funcparams> </funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Get the raw body for the request</para>
                    <para>Returns string</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-options">
                <term>
                    <methodsynopsis>
                        <methodname>isOptions</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this an OPTIONS method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-get">
                <term>
                    <methodsynopsis>
                        <methodname>isGet</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a GET method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-head">
                <term>
                    <methodsynopsis>
                        <methodname>isHead</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a HEAD method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-post">
                <term>
                    <methodsynopsis>
                        <methodname>isPost</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a POST method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-put">
                <term>
                    <methodsynopsis>
                        <methodname>isPut</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a PUT method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-delete">
                <term>
                    <methodsynopsis>
                        <methodname>isDelete</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a DELETE method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-trace">
                <term>
                    <methodsynopsis>
                        <methodname>isTrace</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a TRACE method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.is-connect">
                <term>
                    <methodsynopsis>
                        <methodname>isConnect</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Is this a CONNECT method request?</para>
                    <para>Returns bool</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.render-request-line">
                <term>
                    <methodsynopsis>
                        <methodname>renderRequestLine</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Return the formatted request line (first line) for this HTTP request</para>
                    <para>Returns string</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.to-string">
                <term>
                    <methodsynopsis>
                        <methodname>toString</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Returns string</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.http.request.methods.__to-string">
                <term>
                    <methodsynopsis>
                        <methodname>__toString</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Allow PHP casting of this object</para>
                    <para>Returns string</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.stdlib.message.methods.set-metadata">
                <term>
                    <methodsynopsis>
                        <methodname>setMetadata</methodname>
                        <methodparam>
                            <funcparams>string|int|array|Traversable $spec, mixed $value</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Set message metadata</para>
                    <para>Non-destructive setting of message metadata; always adds to the metadata, never overwrites
the entire metadata container.</para>
                    <para>Returns <classname>Zend\Stdlib\Message</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.stdlib.message.methods.get-metadata">
                <term>
                    <methodsynopsis>
                        <methodname>getMetadata</methodname>
                        <methodparam>
                            <funcparams>null|string|int $key, null|mixed $default</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Retrieve all metadata or a single metadatum as specified by key</para>
                    <para>Returns mixed</para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.stdlib.message.methods.set-content">
                <term>
                    <methodsynopsis>
                        <methodname>setContent</methodname>
                        <methodparam>
                            <funcparams>mixed $value</funcparams>
                        </methodparam>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Set message content</para>
                    <para>Returns <classname>Zend\Stdlib\Message</classname></para>
                </listitem>
            </varlistentry>

            <varlistentry xml:id="zend.stdlib.message.methods.get-content">
                <term>
                    <methodsynopsis>
                        <methodname>getContent</methodname>
                    </methodsynopsis>
                </term>

                <listitem>
                    <para>Get message content</para>
                    <para>Returns mixed</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </section>

    <section xml:id="zend.http.request.examples">
        <info>
            <title>Examples</title>
        </info>

        <example xml:id="zend.http.request.examples.from-string">
            <info><title>Generating a Request object from a string</title></info>

            <programlisting language="php"><![CDATA[
use Zend\Http\Request;
$string = "GET /foo HTTP/1.1\r\n\r\nSome Content";
$request = Request::fromString($string);

$request->getMethod();  // returns Request::METHOD_GET
$request->getUri();     // returns '/foo'
$request->getVersion(); // returns Request::VERSION_11 or '1.1'
$request->getRawBody(); // returns 'Some Content'
]]></programlisting>
        </example>

        <example xml:id="zend.http.request.examples.from-array">
            <info><title>Generating a Request object from an array</title></info>

            <programlisting language="php"><![CDATA[
N/A
]]></programlisting>
        </example>

        <example xml:id="zend.http.request.examples.headers">
            <info><title>Retrieving and setting headers</title></info>

            <programlisting language="php"><![CDATA[
use Zend\Http\Request;
$request = new Request();
$request->headers()->get('Content-Type'); // return content type
$request->headers()->addHeader(new Cookie('foo' => 'bar'));
foreach ($request->headers() as $header) {
    echo $header->getFieldName() . ' with value ' . $header->getFieldValue();
}
]]></programlisting>
        </example>

        <example xml:id="zend.http.request.examples.parameters">
            <info><title>Retrieving and setting GET and POST values</title></info>

            <programlisting language="php"><![CDATA[
use Zend\Http\Request;
$request = new Request();

// post() and get() both return, by default, a Parameters object, which extends ArrayObject
$request->post()->foo = 'value';
echo $request->get()->myVar;
echo $request->get()->offsetGet('myVar');
]]></programlisting>
        </example>

        <example xml:id="zend.http.request.examples.to-string">
            <info><title>Generating an formatted HTTP Request from an Request object</title></info>

            <programlisting language="php"><![CDATA[
use Zend\Http\Request;
$request = new Request();
$request->setMethod(Request::METHOD_POST);
$request->setUri('/foo');
$request->header()->addHeaders(array(
    'HeaderField1' => 'header-field-value',
    'HeaderField2' => 'header-field-value2',
);
$request->post()->set('foo', 'bar');
echo $request->toString();

/** Will produce:
POST /foo HTTP/1.1
HeaderField1: header-field-value
HeaderField2: header-field-value2

foo=bar
*/
]]></programlisting>
        </example>
    </section>
</section>
