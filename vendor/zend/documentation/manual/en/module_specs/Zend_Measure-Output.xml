<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.measure.output"><info><title>Outputting measurements</title></info>

    

    <para>
        Measurements can be output in a number of different ways.
    </para>

    <para>
        <link linkend="zend.measure.output.auto">Automatic output</link>
    </para>

    <para>
        <link linkend="zend.measure.output.value">Outputting values</link>
    </para>

    <para>
        <link linkend="zend.measure.output.unit">Output with unit of measurement</link>
    </para>

    <para>
        <link linkend="zend.measure.output.unit">Output as localized string</link>
    </para>

    <section xml:id="zend.measure.output.auto"><info><title>Automatic output</title></info>
        

        <para>
            <classname>Zend_Measure</classname> supports outputting of strings automatically.

            <example xml:id="zend.measure.output.auto.example-1"><info><title>Automatic output</title></info>
                

                <programlisting language="php"><![CDATA[
$locale = new Zend_Locale('de');
$mystring = "1.234.567,89";
$unit = new Zend_Measure_Length($mystring,
                                Zend_Measure_Length::STANDARD,
                                $locale);

echo $unit;
]]></programlisting>
            </example>
        </para>

        <note><info><title>Measurement output</title></info>
            

            <para>
                Output can be achieved simply by using
                <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/echo">echo</link> or
                <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/print">print</link>.
            </para>
        </note>
    </section>

    <section xml:id="zend.measure.output.value"><info><title>Outputting values</title></info>
        

        <para>
            The value of a measurement can be output using <methodname>getValue()</methodname>.

            <example xml:id="zend.measure.output.value.example-1"><info><title>Output a value</title></info>
                

                <programlisting language="php"><![CDATA[
$locale = new Zend_Locale('de');
$mystring = "1.234.567,89";
$unit = new Zend_Measure_Length($mystring,
                                Zend_Measure_Length::STANDARD,
                                $locale);

echo $unit->getValue();
]]></programlisting>
            </example>
        </para>

        <para>
            The <methodname>getValue()</methodname> method accepts an optional parameter
            <property>round</property> which allows to define a precision for the generated
            output. The standard precision is '2'.
        </para>
    </section>

    <section xml:id="zend.measure.output.unit"><info><title>Output with unit of measurement</title></info>
        

        <para>
            The function <methodname>getType()</methodname> returns the current unit of measurement.

            <example xml:id="zend.measure.output.unit.example-1"><info><title>Outputting units</title></info>
                

                <programlisting language="php"><![CDATA[
$locale = new Zend_Locale('de');
$mystring = "1.234.567,89";
$unit = new Zend_Measure_Weight($mystring,
                                Zend_Measure_Weight::POUND,
                                $locale);

echo $unit->getType();
]]></programlisting>
            </example>
        </para>
    </section>

    <section xml:id="zend.measure.output.localized"><info><title>Output as localized string</title></info>
        

        <para>
            Outputting a string in a format common in the users' country is usually desirable. For
            example, the measurement "1234567.8" would become "1.234.567,8" for Germany. This
            functionality will be supported in a future release.
        </para>
    </section>
</section>
