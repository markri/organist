<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.digits"><info><title>Digits</title></info>
    

    <para>
        <classname>Zend_Validate_Digits</classname> validates if a given value contains only digits.
    </para>

    <section xml:id="zend.validate.set.digits.options"><info><title>Supported options for Zend_Validate_Digits</title></info>
        

        <para>
            There are no additional options for <classname>Zend_Validate_Digits</classname>:
        </para>
    </section>

    <section xml:id="zend.validate.set.digits.basic"><info><title>Validating digits</title></info>
        

        <para>
            To validate if a given value contains only digits and no other characters, simply call
            the validator like shown in this example:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Digits();

$validator->isValid("1234567890"); // returns true
$validator->isValid(1234);         // returns true
$validator->isValid('1a234');      // returns false
]]></programlisting>

        <note><info><title>Validating numbers</title></info>
            

            <para>
                When you want to validate numbers or numeric values, be aware that this validator
                only validates digits. This means that any other sign like a thousand separator or
                a comma will not pass this validator. In this case you should use
                <classname>Zend_Validate_Int</classname> or
                <classname>Zend_Validate_Float</classname>.
            </para>
        </note>
    </section>
</section>
