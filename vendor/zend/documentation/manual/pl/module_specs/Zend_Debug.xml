<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.debug.dumping"><info><title>Wyświetlanie informacji o zmiennych</title></info>

    

    <para>
        Statyczna metoda <code>Zend_Debug::dump()</code> wyświetla lub zwraca
        informacje o wyrażeniu. Ta prosta technika usuwania błędów jest często
        używana, ponieważ jest łatwa w użyciu, nie wymaga inicjowania, użycia
        specjalnych narzędzi czy środowiska testowego.
    </para>

    <example xml:id="zend.debug.dumping.example"><info><title>Przykład użycia metody dump()</title></info>
        
        <programlisting role="php"><![CDATA[
Zend_Debug::dump($var, $label=null, $echo=true);

        ]]></programlisting>
    </example>

    <para>
        Argument <code>$var</code> określa wyrażenie lub zmienną, na temat
        której metoda <code>Zend_Debug::dump()</code> ma wyświetlić informacje.
    </para>

    <para>
        Argument <code>$label</code> jest łańcuchem znaków, który zostanie
        dołączony na początku wyniku użycia metody <code>Zend_Debug::dump()</code>.
        Użycie takich etykiet może być użyteczne na przykład wtedy, gdy
        wyświetlasz informacje o wielu zmiennych na jednym ekranie.
    </para>

    <para>
        Wartość logiczna argumentu <code>$echo</code> określa czy wynik użycia
        metody <code>Zend_Debug::dump()</code> ma być wyświetlony, czy nie.
        Jeśli ma wartość <code>true</code>, wynik jest wyświetlony. Niezależnie
        od wartości tego argumentu, metoda na koniec zwraca wynik.
    </para>

    <para>
        Użyteczna może być informacja o tym, że metoda
        <code>Zend_Debug::dump()</code> używa funkcji PHP
        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/var_dump"><code>var_dump()</code></link>.
        Jeśli dane wyjsciowe mają być wyświetlone w przeglądarce, to w wyniku
        zwróconym przez wywołanie metody <code>var_dump()</code> znaki
        specjalne cytowane są za pomocą funkcji
        <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/htmlspecialchars"><code>htmlspecialchars()</code></link>,
        a cały wynik zostaje objęty znacznikami (X)HTML <code>&lt;pre&gt;</code>.
    </para>

    <tip><info><title>Usuwanie błędów za pomocą Zend_Log</title></info>
        
        <para>
            Użycie metody <code>Zend_Debug::dump()</code> jest najlepsze do
            doraźnego usuwania błędów podczas tworzenia oprogramowania.
            Możesz dodać kod, aby wyświetlić informacje o zmiennej, a potem
            szybko go usunąć.
        </para>
        <para>
            Zapoznaj się także z komponentem
            <link linkend="zend.log.overview">Zend_Log</link> jeśli chcesz
            aby kod służący do usuwania błędów był umieszczony w aplikacji na
            stałe. Na przykład, możesz użyć poziomu raportowania błędów
            <code>DEBUG</code> i obiektu <code>Zend_Log_Writer_Stream</code>,
            aby wyświetlać łańcuchy znaków zwracane przez metodę
            <code>Zend_Debug::dump()</code>.
        </para>
    </tip>

</section>
