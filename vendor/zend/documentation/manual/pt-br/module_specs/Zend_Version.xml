<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.version.reading"><info><title>Obtendo a Versão do Zend Framework</title></info>
    

    <para>
        <classname>Zend_Version</classname> fornece a constante de classe
        <constant>Zend_Version::VERSION</constant> que contém uma string que identifica
        o número da versão de sua instalação do Zend Framework.
        <constant>Zend_Version::VERSION</constant> pode conter "1.7.4", por exemplo.
    </para>

    <para>
        O método estático <methodname>Zend_Version::compareVersion($version)</methodname>
        é baseado na função <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://php.net/version_compare"><methodname>version_compare()</methodname></link>
        do <acronym>PHP</acronym>. Esse método retorna -1 se a versão especificada é mais antiga
        que a versão do Zend Framework instalado, 0 se forem iguais e 1 se a versão especificada
        é mais recente que a versão instalada.
    </para>

    <example xml:id="zend.version.reading.example"><info><title>Exemplo do método compareVersion()</title></info>
        

        <programlisting language="php"><![CDATA[
// retorna -1, 0 ou 1
$cmp = Zend_Version::compareVersion('2.0.0');
]]></programlisting>
    </example>

    <para>
        O método estático <methodname>Zend_Version::getLatest()</methodname> fornece o número da
        última versão estável disponível para download no site <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://framework.zend.com/download/latest">Zend Framework</link>.
    </para>

    <example xml:id="zend.version.latest.example"><info><title>Exemplo do método getLatest()</title></info>
        

        <programlisting language="php"><![CDATA[
// retorna 1.11.0 (ou uma versão posterior)
echo Zend_Version::getLatest();
]]></programlisting>
    </example>
</section>
