<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="migration.16"><info><title>Zend Framework 1.6</title></info>
    

    <para>
        Lors de la migration d'un version précédente vers Zend Framework 1.6 ou plus récent
        vous devriez prendre note de ce qui suit.
    </para>

    <section xml:id="migration.16.zend.controller"><info><title>Zend_Controller</title></info>
        

        <section xml:id="migration.16.zend.controller.dispatcher"><info><title>Changement dans l'interface Dispatcher</title></info>
            

            <para>
                Les utilisateurs ont porté à notre connaissance le fait que
                <classname>Zend_Controller_Front</classname> et
                <classname>Zend_Controller_Router_Route_Module</classname> utilisent tous les deux
                des méthodes du distributeur qui ne sont pas dans l'interface associée. Nous avons
                donc ajouté les trois méthodes suivantes pour s'assurer que les distributeurs
                personnalisés continueront à fonctionner avec les implémentations embarquées :
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        <methodname>getDefaultModule()</methodname> : retourne le nom du module par
                        défaut.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <methodname>getDefaultControllerName()</methodname> : retourne le nom du
                        contrôleur par défaut.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <methodname>getDefaultAction()</methodname> : retourne le nom de l'action par
                        défaut.
                    </para>
                </listitem>
            </itemizedlist>
        </section>
    </section>

    <section xml:id="migration.16.zend.file.transfer"><info><title>Zend_File_Transfer</title></info>
        

        <section xml:id="migration.16.zend.file.transfer.validators"><info><title>Changements quand vous utilisez des validateurs</title></info>
            

            <para>
                Certaines remarques des utilisateurs indiquaient que les validateurs de
                <classname>Zend_File_Transfer</classname> ne fonctionnaient pas comme ceux par
                défaut fournis avec <classname>Zend_Form</classname>.
                <classname>Zend_Form</classname> permet par exemple l'utilisation du paramètre
                <code>breakChainOnFailure</code> qui stoppe la validation de tous les validateurs
                suivants dès qu'une erreur de validation apparaît.
            </para>

            <para>
                Nous avons donc ajouter ce paramètre à tous les validateurs existants pour
                <classname>Zend_File_Transfer</classname>.
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        Ancienne <acronym>API</acronym> : <code>addValidator($validator, $options,
                        $files)</code>.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        Nouvelle <acronym>API</acronym> : <code>addValidator($validator, $breakChainOnFailure,
                        $options, $files)</code>.
                    </para>
                </listitem>
            </itemizedlist>

            <para>
                Pour migrer vos scripts vers la nouvelle <acronym>API</acronym>, ajoutez simplement un a
                <constant>FALSE</constant> après voir défini le validateur souhaité.
            </para>

            <example xml:id="migration.16.zend.file.transfer.example"><info><title>Changer les validateurs de fichiers de 1.6.1 vers 1.6.2</title></info>
                

                <programlisting language="php"><![CDATA[
// Exemple pour 1.6.1
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', array('1B', '100kB'));

// Même exemple pour 1.6.2 et plus récent
// Notez l'ajout du booléen false
$upload = new Zend_File_Transfer_Adapter_Http();
$upload->addValidator('FilesSize', false, array('1B', '100kB'));
]]></programlisting>
            </example>
        </section>
    </section>
</section>
