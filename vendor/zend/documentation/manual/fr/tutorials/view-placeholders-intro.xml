<?xml version="1.0" encoding="utf-8"?>


<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="learning.view.placeholders.intro"><info><title>Introduction</title></info>
    

    <para>
        Dans <link linkend="learning.layout">le chapitre précédent</link>, nous avons abordé le
        pattern Two Step View, qui permet d'encapsuler des vues individuelles dans un layout plus
        global. A la fin du chapitre, cependant, nous avons parlé de certaines limites :
    </para>

    <itemizedlist>
        <listitem>
            <para>
                Comment changer le titre de la page ?
            </para>
        </listitem>

        <listitem>
            <para>
                Comment injecter conditionnellement des scripts ou des feuilles de style dans le
                layout ?
            </para>
        </listitem>

        <listitem>
            <para>
                Comment créer et rendre une barre de navigation optionnelle ? Que se passe-t-il
                si la barre doit contenir conditionnellement du contenu ?
            </para>
        </listitem>
    </itemizedlist>

    <para>
        Ces questions sont traitées dans le pattern <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://java.sun.com/blueprints/corej2eepatterns/Patterns/CompositeView.html">Composite
        View</link>. Une approche de ce pattern est de proposer du contenu pour le layout global.
        Dans Zend Framework, ce mécanisme est implémenté au travers d'aides de vue spéciales
        appelées "placeholders." Les placeholders permettent d'agréger du contenu et de le rendre
        ailleurs.
    </para>
</section>
