<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.between"><info><title>Between</title></info>
    

    <para>
        <classname>Zend_Validate_Between</classname> permet de valider qu'une valeur
        soit bien comprise entre deux bornes.
    </para>

    <note><info><title>Zend_Validate_Between ne supporte que les nombres</title></info>
        

        <para>
            Zend_Validate_Between ne supporte pas les chaines ou les dates.
        </para>
    </note>

    <section xml:id="zend.validate.set.between.options"><info><title>Options gérées par Zend_Validate_Between</title></info>
        

        <para>
            Les options suivantes sont reconnues par <classname>Zend_Validate_Between</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>inclusive</property></emphasis>: Défini si les bornes sont
                    inclusives dans la validation (min et max). Par défaut, <constant>TRUE</constant>.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis><property>min</property></emphasis>: Affecte la borne inférieure.
                </para>
            </listitem>

            <listitem>
                <para>
                    <emphasis><property>max</property></emphasis>: Affecte la borne supérieure.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.validate.set.between.basic"><info><title>Comportement par défaut de Zend_Validate_Between</title></info>
        

        <para>
            Par défaut ce validateur vérifie sur la valeur est entre <property>min</property> et
            <property>max</property> inclusivement pour les deux bornes.
        </para>

        <programlisting language="php"><![CDATA[
$valid  = new Zend_Validate_Between(array('min' => 0, 'max' => 10));
$value  = 10;
$result = $valid->isValid($value);
// retourne true
]]></programlisting>

        <para>
            Dans l'exemple ci-dessus, <constant>TRUE</constant> est retourné car par défaut les bornes
            supérieures et inférieures sont inclusives. Toute valeur depuis '0' à '10' sont donc
            autorisées et reconnues. '-1' et '11' auraient retourné <constant>FALSE</constant>.
        </para>
    </section>

    <section xml:id="zend.validate.set.between.inclusively"><info><title>Validation exclusive sur les bornes</title></info>
        

        <para>
            Il peut être nécessaire d'exclure les bornes dans la validation. Voyez l'exemple qui suit:
        </para>

        <programlisting language="php"><![CDATA[
$valid  = new Zend_Validate_Between(
    array(
        'min' => 0,
        'max' => 10,
        'inclusive' => false
    )
);
$value  = 10;
$result = $valid->isValid($value);
// retourne false
]]></programlisting>

        <para>
            L'exemple ci-dessus fait en sorte que '0' et '10' retournent <constant>FALSE</constant>.
        </para>
    </section>
</section>
