<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.digits"><info><title>Digits</title></info>
    

    <para>
        <classname>Zend_Validate_Digit</classname> valide si une donnée contient des chiffres.
    </para>

    <section xml:id="zend.validate.set.digits.options"><info><title>Options supportées par Zend_Validate_Digits</title></info>
        

        <para>
            Aucun option n'est gérée par <classname>Zend_Validate_Digits</classname>
        </para>
    </section>

    <section xml:id="zend.validate.set.digits.basic"><info><title>Valider des chiffres</title></info>
        

        <para>
            Pour valider si une donnée ne contient que des chiffres et pas d'autre caractère, appelez
            simplement le validateur comme montré dans l'exemple suivant:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Digits();

$validator->isValid("1234567890"); // retourne true
$validator->isValid(1234);         // retourne true
$validator->isValid('1a234');      // retourne false
]]></programlisting>

        <note><info><title>Valider des nombres</title></info>
            

            <para>
                Si vous voulez valider des nombres ou des valeurs numériques, faites attention car ce validateur
                ne valide que les chiffres. Ceci signifie que les signes comme les séparateurs des milliers ou
                les virgules ne seront pas pris en compte et le validateur échouera. Voyez pour ces cas
                <classname>Zend_Validate_Int</classname> ou <classname>Zend_Validate_Float</classname>.
            </para>
        </note>
    </section>
</section>
