<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.validate.set.int"><info><title>Int</title></info>
    

    <para>
        <classname>Zend_Validate_Int</classname> valide une valeur envers un entier. Les entiers localisés sont
        aussi gérés.
    </para>

    <section xml:id="zend.validate.set.int.options"><info><title>Options supportées par Zend_Validate_Int</title></info>
        

        <para>
            Les options suivantes sont supportées par <classname>Zend_Validate_Int</classname>:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <emphasis><property>locale</property></emphasis>: Affecte la locale à utiliser lors de la
                    validation.
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.validate.set.int.basic"><info><title>Validation simple d'entiers</title></info>
        

        <para>
            La manière la plus simple de valider un entier est d'utiliser les paramètres systèmes. Lorsqu'aucune
            option n'est passée, la locale de l'environnement sera utilisée:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Int();

$validator->isValid(1234);   // retourne true
$validator->isValid(1234.5); // retourne false
$validator->isValid('1,234'); // retourne true
]]></programlisting>

        <para>
            Dans l'exemple ci-dessus l'environnement est supposé réglé sur la locale "en". Comme vous le voyez,
            le regroupement de chiffres est supporté (troisième exemple).
        </para>
    </section>

    <section xml:id="zend.validate.set.int.localized"><info><title>Validation d'entiers localisés</title></info>
        

        <para>
            Il est parfois nécessaire de valider des entiers localisés. Les entiers sont souvent écrits de
            manière différente en fonction des pays/régions. Par exemple en anglais vous pouvez écrire "1234"
            ou "1,234", ce sont tous les deux des entiers mais le regroupement des chiffres est optionnel.
            En allemand, vous écririez "1.234" et en français "1 234".
        </para>

        <para>
            <classname>Zend_Validate_Int</classname> peut valider de telles notations. Il est limité à la locale
            utilisée et valide le séparateur utilisé en fonction de la locale. Voyez le code ci-après:
        </para>

        <programlisting language="php"><![CDATA[
$validator = new Zend_Validate_Int(array('locale' => 'de'));

$validator->isValid(1234); // retourne true
$validator->isValid("1,234"); // retourne false
$validator->isValid("1.234"); // retourne true
]]></programlisting>

        <para>
            Comme vous le voyez, avec une locale, l'entrée est validée en fonction de la locale. En utilisant
            l'anglais, vous récupérez <constant>FALSE</constant> lorsque la locale force une notation différente.
        </para>

        <para>
            La locale peut être affectée/récupérée après la création du validateur au moyen des méthodes
            <methodname>setLocale()</methodname> et <methodname>getLocale()</methodname>.
        </para>
    </section>
</section>
