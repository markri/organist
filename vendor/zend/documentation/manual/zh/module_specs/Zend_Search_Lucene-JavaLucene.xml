<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="zend.search.lucene.java-lucene"><info><title>与 Java Lucene 的互操作性</title></info>
    

    <section xml:id="zend.search.lucene.index-creation.file-formats"><info><title>文件格式</title></info>
        
        <para>
          Zend_Search_Lucene 的索引文件格式和 1.4 或更高版本的 Java Lucene 二进制兼容。
        </para>

        <para>
          关于文件格式的更详细的描述在这里：
          <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://lucene.apache.org/java/docs/fileformats.html">http://lucene.apache.org/java/docs/fileformats.html</uri>。
          <footnote><para> 当前支持的 Lucene 索引文件格式版本是 v2.3（从ZF 1.6 版开始）。</para></footnote>
        </para>
    </section>

    <section xml:id="zend.search.lucene.index-creation.index-directory"><info><title>索引目录</title></info>
        

        <para>
            在创建了索引之后，索引目录中将包含下列文件：
        </para>

        <itemizedlist>
            <listitem>
                <para>
                <filename>segments</filename> 文件是一个索引分段的清单。
                </para>
            </listitem>
            <listitem>
                <para>
                <filename>*.cfs</filename> 文件包含索引分段。请注意！优化了的索引总是只有一个分段。
                </para>
            </listitem>
            <listitem>
                <para>
                <filename>deletable</filename> 文件是一个不再被索引使用但是无法删除的文件清单。
                </para>
            </listitem>
        </itemizedlist>
    </section>

    <section xml:id="zend.search.lucene.java-lucene.source-code"><info><title>Java 源代码</title></info>
        
        <para>
            下面的 Java 程序提供了一个如何使用 Java Lucene 索引文件的例子：
        </para>

        <programlisting role="java"><![CDATA[
/**
* Index creation:
*/
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.document.*;

import java.io.*

...

IndexWriter indexWriter = new IndexWriter("/data/my_index",
                                          new SimpleAnalyzer(), true);

...

String filename = "/path/to/file-to-index.txt"
File f = new File(filename);

Document doc = new Document();
doc.add(Field.Text("path", filename));
doc.add(Field.Keyword("modified",DateField.timeToString(f.lastModified())));
doc.add(Field.Text("author", "unknown"));
FileInputStream is = new FileInputStream(f);
Reader reader = new BufferedReader(new InputStreamReader(is));
doc.add(Field.Text("contents", reader));

indexWriter.addDocument(doc);

]]></programlisting>
    </section>
</section>
