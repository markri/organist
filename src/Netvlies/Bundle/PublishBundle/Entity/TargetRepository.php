<?php

namespace Netvlies\Bundle\PublishBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

use PDO;

/**
 * TargetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TargetRepository extends EntityRepository
{

    public function getByAppAndEnv($application, $environment){

        $entityManager = $this->getEntityManager();

        $query = $entityManager->createQuery('
            SELECT t FROM Netvlies\Bundle\PublishBundle\Entity\Target t
            WHERE t.application = :app
            AND t.environment = :env
            AND t.inactive IS NOT TRUE
        ');

        $query->setParameter('app', $application);
        $query->setParameter('env', $environment);

        return $query->getResult();
    }


    /**
     * Yuck, but currently no solution for having this query hydrated to objects in one time
     *
     * @param $app
     * @return array
     */
    public function getOrderedByOTAP($app){

        $query = "
            SELECT t.id FROM Target t
            INNER JOIN Environment e ON t.environment_id = e.id
            WHERE t.application_id = :id
            AND t.inactive IS NOT TRUE
            ORDER BY FIELD(e.type, 'O', 'T', 'A', 'P'), t.id DESC";

        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare($query);
        $stmt->bindValue('id', $app->getId());
        $stmt->execute();
        $ids = $stmt->fetchAll(PDO::FETCH_COLUMN);

        $results = array();

        // Especially this part feels wrong. On the other hand, how many targets are there at most? just a few. Usually
        // 4 at most. so acceptable for now
        foreach($ids as $id){
            $results[] = $target = $this->findOneById($id);
        }

        return $results;
    }


}