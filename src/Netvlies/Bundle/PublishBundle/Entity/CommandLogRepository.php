<?php
/**
 * This file is part of Organist
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author: markri <mdekrijger@netvlies.nl>
 */

namespace Netvlies\Bundle\PublishBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CommandLog repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommandLogRepository extends EntityRepository
{

    /**
     * @param Target $target
     * @return mixed
     */
    public function getLogsForApplication($application, $limit=null)
    {
        $entityManager = $this->getEntityManager();

        $query = $entityManager->createQuery('
            SELECT c FROM Netvlies\Bundle\PublishBundle\Entity\CommandLog c
            WHERE c.application = :app
            ORDER BY c.id DESC
        ')->setParameter('app', $application);


        if(!is_null($limit)){
            $query->setMaxResults($limit);
        }

        return $query->getResult();
    }

    public function getFavouriteApplications($user='anonymous', $limit=5)
    {
        $entityManager = $this->getEntityManager();

        $sql = '
            SELECT
              c.application_id,
              MAX(c.datetimestart) AS datum
            FROM
              CommandLog c
              INNER JOIN Application a ON c.application_id = a.id
            WHERE
              c.user = ?
              AND a.status = ?
            GROUP BY
              c.application_id
            ORDER BY datum DESC
            LIMIT 5';

        $statement = $entityManager->getConnection()->prepare($sql);
        $statement->bindValue(1, $user);
        $statement->bindValue(2, Application::STATUS_ACTIVE);
        $statement->execute();
        $result = $statement->fetchAll();
        $appIds = array();
        $apps = array();

        foreach($result as $result){
            $appIds[] = $result['application_id'];
            $apps[] = $this->getEntityManager()->getRepository('NetvliesPublishBundle:Application')->findOneById($result['application_id']);
        }

        if(count($appIds) < $limit){

            $query = $entityManager->createQuery('
               SELECT a FROM Netvlies\Bundle\PublishBundle\Entity\Application a
               WHERE a.id NOT IN (:appIds)
               AND a.status = :status
               ORDER BY a.id DESC'
            )
                ->setParameter('appIds', empty($appIds)? array(0) : $appIds)
                ->setParameter('status', Application::STATUS_ACTIVE);


            $query->setMaxResults($limit - count($appIds));
            $result = $query->getResult();

            foreach($result as $app){
                $apps[] = $app;
            }
        }

        return $apps;
    }

}