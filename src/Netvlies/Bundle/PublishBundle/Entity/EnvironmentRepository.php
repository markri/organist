<?php
/**
 * This file is part of Organist
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @author: markri <mdekrijger@netvlies.nl>
 */

namespace Netvlies\Bundle\PublishBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * EnvironmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnvironmentRepository extends EntityRepository
{

    /**
     * Gets an array of all environment objects ordered by D, T, A, P
     * @return array
     */
    public function getOrderedByTypeAndHost()
    {
        $query = $this->getEntityManager()->createQuery('
            SELECT e FROM Netvlies\Bundle\PublishBundle\Entity\Environment e
            ORDER BY e.hostname
        ');

        $result = $query->getResult();

        usort($result, function($envA, $envB){

            $order = array('D'=>0, 'T'=>1, 'A'=>2, 'P'=>3);

            if(!array_key_exists($envA->getType(), $order)
                || !array_key_exists($envB->getType(), $order)){
                return -1;
            }

            $orderA = $order[$envA->getType()];
            $orderB = $order[$envB->getType()];

            if($orderA > $orderB){
                return 1;
            }

            if($orderA < $orderB){
                return -1;
            }

            return 0;
        });

        return $result;
    }
}