{#export HOME={{ homedir }} && \#} {# Try to remove this parameter#} \
\ {# Select appropiate ruby version #}
{% if strategy.rvm is not empty %} \
source /usr/local/rvm/scripts/rvm && \
rvm use {{ strategy.rvm }} && \
{% endif %} \
cd {{ versioning.getRepositoryPath(application) }} && \
\ {# Start optional SSH agent #}
{% if versioning.privateKey is not empty %} \
eval `ssh-agent -t 7200` && \
`ssh-add {{versioning.privateKey}}` && \
{% endif %} \
\ {# Bring repository in desired state #}
git checkout '{{ revision }}' && \
\ {# Capistrano deploy #}
cap {{ target.environment.type }} deploy:update \
-Sproject='{{ application.name }}' \
-Sapptype='{{ application.applicationType }}' \
-Sappkey='{{ application.keyname }}' \
-Sgitrepo='{{ application.scmUrl }}' \
-Srepositorypath='{{ versioning.repositoryPath(application) }}' \
-Srevision='{{ revision }}' \
-Susername='{{ target.username }}' \
-Smysqldb='{{ target.mysqldb }}' \
-Smysqluser='{{ target.mysqluser }}' \
-Smysqlpw='{{ target.mysqlpw }}' \
-Swebroot='{{ target.webroot }}' \
-Sapproot='{{ target.approot }}' \
-Scaproot='{{ target.caproot }}' \
-Sprimarydomain='{{ target.primaryDomain }}' \
-Shostname='{{ target.environment.hostname }}' \
-Ssshport='{{ target.environment.port }}' \
-Sdtap='{{ target.environment.type }}' \
-Suserfiles='{% for userFile in application.userFilesFiles %}{{ userFile.path }}{% if not loop.last %},{% endif %}{% endfor %}' \
-Suserdirs='{% for userFile in application.userFilesFiles %}{{ userFile.path }}{% if not loop.last %},{% endif %}{% endfor %}' \
-Svhostaliases='{% for alias in target.domainAliases %}{{ alias.alias }}{% if not loop.last %},{% endif %}{% endfor %}' && \
\ {# Update version script#}
echo "Finished updating process. Retrieving current version ..." && \
cd {{ approot }} && \
app/console organist:updateversion --id={{ target.id }} && \
echo "" && \
\ {# Kill SSH agent #}
{% if versioning.privateKey is not empty %} \
ssh-agent -k > /dev/null 2>&1 && \
unset SSH_AGENT_PID && \
unset SSH_AUTH_SOCK \
{% endif %} \
